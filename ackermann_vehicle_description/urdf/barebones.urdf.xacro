<?xml version="1.0"?>

<robot name="em_3905" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- chassis_length is measured along the x axis, chassis_width
       along the y axis, and chassis_height along the z axis. -->
  <xacro:property name="chassis_length" value="1.0"/>
  <xacro:property name="chassis_width" value="0.168"/>
  <xacro:property name="chassis_height" value="0.02"/>
  <xacro:property name="chassis_mass" value="2.788"/>

  <!-- hub_dia and tire_dia are the diameters of the hub and tire,
       respectively. hex_hub_depth is the distance that the hex hub is
       inset from the outer edge of the tire. It is set so that each wheel
       is a "zero offset" wheel. hex_hub_depth = tire_width / 2 -
       axle_length. -->
  <xacro:property name="hub_dia" value="0.09652"/>
  <xacro:property name="tire_dia" value="0.14605"/>
  <xacro:property name="tire_width" value="0.0889"/>
  <xacro:property name="hex_hub_depth" value="0.01445"/>
  <xacro:property name="wheel_mass" value="0.29"/>

  <!-- hex_hub_dist is the distance between left and right hex hubs when
       the shock absorbers are fully extended. axle_length is the distance
       from a U joint to the corresponding hex hub. wheel_travel is the
       vertical wheel travel. -->
  <xacro:property name="wheelbase" value="0.335"/>
  <xacro:property name="hex_hub_dist" value="0.365"/>
  <xacro:property name="axle_length" value="0.03"/>
  <xacro:property name="wheel_travel" value="0.084"/>
  <xacro:property name="shock_z_offset" value="0.0655"/>


  <material name="chassis_mat">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="tire_mat">
    <color rgba="0 0 0 1"/>
  </material>

  <!-- Null inertial element. This is needed to make the model work with
       Gazebo. -->
  <xacro:macro name="null_inertial">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a solid cuboid. Width is measured along the x axis, depth
       along the y axis, and height along the z axis. -->
  <xacro:macro name="solid_cuboid_inertial"
               params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}"
               ixy="0" ixz="0"
               iyy="${mass * (width * width + height * height) / 12}"
               iyz="0"
               izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>

  <!-- Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively. -->
  <xacro:macro name="thick_walled_tube_inertial"
               params="inner_rad outer_rad height mass">
    <inertial>
      <mass value="${mass}"/>
      <inertia ixx="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               ixy="0" ixz="0"
               iyy="${(1 / 12) * mass * (3 * (inner_rad * inner_rad +
                    outer_rad * outer_rad) + height * height)}"
               iyz="0"
               izz="${mass * (inner_rad * inner_rad +
                    outer_rad * outer_rad) / 2}"/>
    </inertial>
  </xacro:macro>


  <!-- base_link must have geometry so that its axes can be displayed in
       rviz. -->
  <link name="base_link"/>

  <!-- Chassis -->
  <link name="chassis">
    <visual>
      <origin xyz="0 0 ${-chassis_height / 2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
    <collision>
      <origin xyz="0 0 ${-chassis_height / 2}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <xacro:solid_cuboid_inertial
        width="${chassis_length}" depth="${chassis_width}"
        height="${chassis_height}" mass="${chassis_mass}">
      <origin xyz="0 0 ${-chassis_height / 2}"/>
    </xacro:solid_cuboid_inertial>
  </link>
  <joint name="base_link_to_chasis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>
  <gazebo reference="chassis">
    <material>Gazebo/White</material>
  </gazebo>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- FRONT -->

  <!-- axel_carrier -->
  <!-- left -->
  <xacro:macro name="front_axle_carrier" params="lr_prefix lr_reflect">
    <link name="${lr_prefix}_front_axle_carrier">
        <xacro:null_inertial/>
    </link>
    <joint name="${lr_prefix}_steering_joint" type="revolute">
        <parent link="chassis"/>
        <child link="${lr_prefix}_front_axle_carrier"/>
        <origin xyz="0.1675 ${lr_reflect*0.1525} -0.0235"/>
        <axis xyz="0 0 1"/>
        <limit effort="0.5649" lower="-0.785398163" upper="0.785398163" velocity="4.553"/>
    </joint>
    <transmission name="${lr_prefix}_steering_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${lr_prefix}_steering_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="${lr_prefix}_steering_act">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
  </xacro:macro>
  <xacro:front_axle_carrier lr_prefix="left" lr_reflect="1"/>
  <xacro:front_axle_carrier lr_prefix="right" lr_reflect="-1"/>  

  <!-- wheel -->
  <!-- left -->
  <xacro:macro name="front_wheel" params="lr_prefix lr_reflect">
    <link name="${lr_prefix}_front_wheel">
      <visual>
        <origin xyz="0 0 0"/>
        <geometry>
        <cylinder length="${tire_width}" radius="${tire_dia/2}"/>
        </geometry>
        <material name="tire_mat"/>
      </visual>
      <collision>
        <origin xyz="0 0 0"/>
        <geometry>
        <cylinder length="${tire_width}" radius="${tire_dia/2}"/>
        </geometry>
      </collision>
      <xacro:thick_walled_tube_inertial
        inner_rad="${hub_dia/2}" outer_rad="${tire_dia/2}"
        height="${tire_width}" mass="${wheel_mass}"/>
    </link>
    <joint name="${lr_prefix}_front_axle" type="continuous">
        <parent link="${lr_prefix}_front_axle_carrier"/>
        <child link="${lr_prefix}_front_wheel"/>
        <origin rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit effort="5.12766" velocity="244.8696"/>
    </joint>
    <transmission name="${lr_prefix}_front_axle_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${lr_prefix}_front_axle">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="${lr_prefix}_front_axle_act">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="${lr_prefix}_front_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>
  <xacro:front_wheel lr_prefix="left" lr_reflect="1"/>
  <xacro:front_wheel lr_prefix="right" lr_reflect="-1"/>  


  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  <!-- REAR -->
  <xacro:macro name="rear_wheel" params="lr_prefix lr_reflect">
    <link name="${lr_prefix}_rear_wheel">
      <visual>
        <origin xyz="0 0 0"/>
        <geometry>
          <cylinder length="${tire_width}" radius="${tire_dia/2}"/>
        </geometry>
        <material name="tire_mat"/>
      </visual>
      <collision>
        <origin xyz="0 0 0"/>
        <geometry>
          <cylinder length="${tire_width}" radius="${tire_dia/2}"/>
        </geometry>
      </collision>
      <xacro:thick_walled_tube_inertial
            inner_rad="${hub_dia/2}" outer_rad="${tire_dia/2}"
            height="${tire_width}" mass="${wheel_mass}"/>
    </link>
    <joint name="${lr_prefix}_rear_axle" type="continuous">
        <parent link="chassis"/>
        <child link="${lr_prefix}_rear_wheel"/>
        <origin xyz="-0.1675 ${lr_reflect*0.1525} -0.0235" rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 -1"/>
        <limit effort="5.12766" velocity="244.8696"/>
    </joint>
    <transmission name="${lr_prefix}_rear_axle_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${lr_prefix}_rear_axle">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="${lr_prefix}_rear_axle_act">
        <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="${lr_prefix}_rear_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>
  <xacro:rear_wheel lr_prefix="left" lr_reflect="1"/>
  <xacro:rear_wheel lr_prefix="right" lr_reflect="-1"/>  

  <!-- gazebo plugins for control and odometry ground truth-->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so" />
    <plugin name="gazebo_ros_p3d"     filename="libgazebo_ros_p3d.so">
      <frameName>map</frameName>
      <bodyName>base_link</bodyName>
      <topicName>odom_truth</topicName>
      <updateRate>30.0</updateRate>
    </plugin>
  </gazebo>

</robot>
